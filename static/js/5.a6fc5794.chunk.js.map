{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","components/common/FormsControls/FormControls.js","components/utils/validators/validators.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogsItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","FormControl","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","input","restProps","child","Input","createField","placeholder","name","validate","component","text","required","value","maxLengthCreator","maxLength","length","DialogItem","path","id","s","dialog","active","to","MessageItem","message","maxLength50","reduxForm","form","onSubmit","handleSubmit","Field","Dialogs","dialogsElements","dialogsData","map","d","key","messagesElements","messages","m","Message","dialogs","dialogsItems","values","sendMessage","newMessageText","mapStateToPropsForRedirect","state","isAuth","auth","compose","connect","DialogsPage","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"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","file":"static/js/5.a6fc5794.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1Wqoj\",\"error\":\"FormsControls_error__1m5wo\",\"formSummaryError\":\"FormsControls_formSummaryError__PjrMp\"};","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\nimport { Field } from \"redux-form\";\r\n\r\nconst FormControl = ({ meta: {touched, error}, children }) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validate, component, props = {}, text = '') => (\r\n    <div>\r\n        <Field placeholder={placeholder}\r\n            name={name}\r\n            validate={validate}\r\n            component={component}\r\n            {...props} /> {text}\r\n    </div>\r\n)","export const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3RtOQ\",\"dialogsItems\":\"Dialogs_dialogsItems__2LP_E\",\"active\":\"Dialogs_active__3fwVK\",\"messages\":\"Dialogs_messages__2QiQU\",\"dialog\":\"Dialogs_dialog__3Gv3V\"};","import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}> {props.name} </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst MessageItem = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.dialog}>{props.message}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageItem;","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormControls\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={'newMessageText'} placeholder={'Text message'} component={Textarea}\r\n                       validate={[required, maxLength50]} />\r\n            </div>\r\n            <div>\r\n                <button>Add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({ form: 'DialogsAddNewMessageForm' })(AddMessageForm);","import React from \"react\";\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogsItem/DialogsItem\";\r\nimport MessageItem from \"./Message/Message\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsElements = props.dialogsData.map( d => <DialogItem name={d.name} id={d.id} key={d.id} /> );\r\n    let messagesElements = props.messages.map( m => <MessageItem message={m.message} id={m.id} key={m.id} /> );\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                { dialogsElements }\r\n            </div>\r\n\r\n            <div className={s.messages}>\r\n                { messagesElements }\r\n            </div>\r\n\r\n            <AddMessageForm onSubmit={addNewMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React, {Component} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from \"react\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsData: state.DialogsPage.dialogsData,\r\n        messages: state.DialogsPage.messages\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageText) => {\r\n            dispatch(sendMessageCreator(newMessageText));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}