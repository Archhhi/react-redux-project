{"version":3,"sources":["serviceWorker.js","components/Navbar/Nav.jsx","components/Music/Music.jsx","components/News/News.jsx","components/Settings/Settings.jsx","components/Users/User.jsx","components/common/Paginator/Paginator.jsx","components/Users/Users.jsx","components/utils/validators/object-helpers.js","redux/users-reducer.js","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","redux/app-reducer.js","redux/store-redux.js","hoc/withSuspense.js","App.js","index.js","components/common/Preloader/Preloader.js","redux/auth-reducer.js","components/common/Paginator/Paginator.module.css","components/Header/Header.module.css","components/Navbar/Nav.module.css","redux/profile-reducer.js","assets/images/archi-15.jpg","redux/dialogs-reducer.js","api/api.js","components/Users/users.module.css","assets/images/35.svg"],"names":["Boolean","window","location","hostname","match","Nav","className","s","nav","item","to","activeClassName","activeLink","active","friendBlock","friendItem","Music","props","News","Settings","User","user","followingInProgress","unfollow","follow","id","src","photos","small","userPhoto","followed","disabled","some","onClick","name","status","Paginator","totalItemsCount","pageSize","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","cn","styles","paginator","filter","p","map","selectedPage","pageNumber","key","e","Users","totalUsersCount","users","u","updateObjectInArray","items","itemId","objPropName","newObjProps","initialState","isFetching","followSuccess","userId","type","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","data","resultCode","usersReducer","state","action","totalCount","getUsers","createSelector","usersPage","getPageSize","getTotalUserCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","Component","compose","connect","userAPI","bind","Header","header","loginBlock","isAuth","login","logout","HeaderContainer","auth","initialized","appReducer","reducers","combineReducers","ProfilePage","profileReducer","DialogsPage","dialogsReducer","authReducer","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleWare","__store__","withSuspense","Suspense","fallback","LoginPage","lazy","ProfileContainer","DialogsContainer","App","catchAllUnhandledErrors","reason","promise","alert","initializeApp","addEventListener","removeEventListener","exact","path","render","AppContainer","withRouter","getAuthUserData","Promise","all","then","MainApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","preloader","email","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","authAPI","me","response","password","rememberMe","captcha","getCaptchaUrl","messages","length","stopSubmit","_error","securityAPI","url","module","exports","postsData","LikesCount","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","ProfileAPI","getProfile","getStatus","profileAPI","updateStatus","savePhoto","file","saveProfile","getState","reject","newPost","dialogsData","sendMessageCreator","newMessageText","instance","axios","baseURL","withCredentials","headers","get","post","delete","put","photoFile","formData","FormData","append"],"mappings":"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","file":"static/js/main.2345645c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport s from './Nav.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Nav = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to='/dialogs' activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to='/users' activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/news' activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/music' activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/settings' activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n\r\n            <div className={s.friendBlock}>\r\n                <h2>Friends</h2>\r\n                <div className={s.friendItem}>\r\n                    <NavLink to='/1' className={s.friendItem}/>\r\n                    <div>Andrey</div>\r\n                </div>\r\n                <div className={s.friendItem}>\r\n                    <NavLink to='/2' className={s.friendItem}/>\r\n                    <div>Sveta</div>\r\n                </div>\r\n                <div className={s.friendItem}>\r\n                    <NavLink to='/3' className={s.friendItem}/>\r\n                    <div>Sasha</div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Nav;","import React from \"react\";\r\nimport s from './Music.module.css';\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from \"react\";\r\nimport s from './News.module.css';\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from \"react\";\r\nimport s from './Settings.module.css';\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import React from \"react\";\r\nimport s from './users.module.css';\r\nimport userPhoto from '../../assets/images/archi-15.jpg';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nlet User = ({ user, followingInProgress, unfollow, follow }) => {\r\n    return (\r\n        <div>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto} className={s.userPhoto} />\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {user.followed\r\n                        ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                            onClick={() => { unfollow(user.id) }}>\r\n                            Отписаться</button>\r\n\r\n                        : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                            onClick={() => { follow(user.id) }}>\r\n                            Подписаться</button>}\r\n                </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </span>\r\n                <span>\r\n                    <div>{\"user.location.country\"}</div>\r\n                    <div>{\"user.location.city\"}</div>\r\n                </span>\r\n            </span>\r\n        </div>)\r\n}\r\n\r\nexport default User;","import React, {useState} from \"react\";\r\nimport styles from './Paginator.module.css';\r\nimport cn from 'classnames';\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div className={cn(styles.paginator)}>\r\n            {portionNumber > 1 &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber - 1)\r\n            }}>PREV</button>}\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map((p) => {\r\n                    return <span className={cn({\r\n                        [styles.selectedPage] : currentPage === p\r\n                    }, styles.pageNumber)}\r\n                                 key={p}\r\n                                 onClick={(e) => {\r\n                                     onPageChanged(p);\r\n                                 }}> {p} </span>\r\n                })}\r\n            {portionCount > portionNumber &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber + 1)\r\n            }}>NEXT</button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator;","import React from \"react\";\r\nimport User from \"./User\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\n    return <div>\r\n        <Paginator currentPage={currentPage}\r\n                   onPageChanged={onPageChanged}\r\n                   totalItemsCount={totalUsersCount}\r\n                   pageSize={pageSize}\r\n        />\r\n        <div>\r\n            {\r\n                users.map(u => <User user={u}\r\n                                     key={u.id}\r\n                                     followingInProgress={props.followingInProgress}\r\n                                     unfollow={props.unfollow}\r\n                                     follow={props.follow}\r\n                />)\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Users;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}","import { userAPI } from \"../api/api\";\r\nimport { updateObjectInArray } from \"../components/utils/validators/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    currentPage: 1,\r\n    pageSize: 10,\r\n    totalUsersCount: 19,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n        case SET_USERS: {\r\n            return { ...state, users: [...action.users] }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return { ...state, totalUsersCount: action.totalCount }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUserCount = (totalCount) => ({type: SET_TOTAL_USERS_COUNT, totalCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId});\r\n\r\nexport const requestUsers = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(currentPage));\r\n\r\n        let data = await userAPI.getUsers(currentPage, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.data.items));\r\n        dispatch(setTotalUserCount(data.data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, userAPI.follow.bind(userAPI), followSuccess);\r\n}\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, userAPI.unfollow.bind(userAPI), unfollowSuccess);\r\n}\r\n\r\nexport default usersReducer;","import { createSelector } from \"reselect\";\r\n\r\nexport const getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(u => true);\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUserCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}","import React from \"react\";\r\nimport Users from \"./Users\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    unfollow, toggleFollowingProgress, requestUsers\r\n} from \"../../redux/users-reducer\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport { compose } from \"redux\";\r\nimport {\r\n    getPageSize, getTotalUserCount,\r\n    getCurrentPage, getIsFetching, getFollowingInProgress, getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (currentPage) => {\r\n        const {pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n            <Users users={this.props.users}\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUserCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { unfollow, follow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers }),\r\n)(UsersContainer);","import React from \"react\";\r\nimport s from \"./Header.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src='https://cdn.shopify.com/shopifycloud/hatchful-web/assets/6fcc76cfd1c59f44d43a485167fb3139.png'/>\r\n\r\n            <div className={s.loginBlock}>\r\n                { props.isAuth\r\n                    ? <div>{props.login} - <button onClick={props.logout}>log out</button></div>\r\n                    : <NavLink to={'/Login'}>login</NavLink> }\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import { getAuthUserData } from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n    });\r\n}\r\n\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, createStore, compose} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleWare from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    ProfilePage: profileReducer,\r\n    DialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleWare)));\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from \"react\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader />}>\r\n            <Component {...props} />\r\n        </React.Suspense>\r\n    };\r\n}","import React, {Component} from 'react';\nimport './App.css';\nimport {Route, withRouter, HashRouter, Redirect, Switch} from \"react-router-dom\";\nimport Nav from \"./components/Navbar/Nav\";\nimport Music from \"./components/Music/Music\";\nimport News from \"./components/News/News\";\nimport Settings from \"./components/Settings/Settings\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport {connect, Provider} from 'react-redux';\nimport {initializeApp} from \"./redux/app-reducer\";\nimport {compose} from 'redux';\nimport Preloader from './components/common/Preloader/Preloader';\nimport store from './redux/store-redux';\nimport {withSuspense} from \"./hoc/withSuspense\";\n\nconst LoginPage = React.lazy(() => import('./components/Login/LoginPage'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\n\nclass App extends Component {\n    catchAllUnhandledErrors = (reason, promise) => {\n        alert(\"Some error occured\");\n    }\n\n    componentDidMount() {\n        this.props.initializeApp();\n        window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Nav/>\n                <div className='app-wrapper-content'>\n                    <Switch>\n                        <Route exact path='/'\n                               render={() => <Redirect to={\"/profile\"}/>}/>\n                        <Route path='/login'\n                               render={withSuspense(LoginPage)}/>\n                        <Route path='/profile/:userId?'\n                               render={withSuspense(ProfileContainer)}/>\n                        <Route path='/dialogs'\n                               render={withSuspense(DialogsContainer)}/>\n                        <Route path='/users'\n                               render={() => <UsersContainer/>}/>\n                        <Route path='/news'\n                               render={() => <News/>}/>\n                        <Route path='/music'\n                               render={() => <Music/>}/>\n                        <Route path='/settings'\n                               render={() => <Settings/>}/>\n                        <Route path='*'\n                               render={() => <div>404 NOT FOUND</div>}/>\n                    </Switch>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nlet AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp})\n)(App);\n\nconst MainApp = () => {\n    return <HashRouter>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </HashRouter>\n}\n\nexport default MainApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport MainApp from './App';\n\nReactDOM.render(<MainApp/>, document.getElementById('root'));\n\nserviceWorker.unregister();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from \"react\";\r\nimport preloader from '../../../assets/images/35.svg';\r\n\r\nconst Preloader = () => {\r\n    return <div>\r\n        <img src={preloader} />\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import {authAPI, securityAPI} from \"../api/api\";\r\nimport { stopSubmit } from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'auth/SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'auth/GET_CAPTCHA_URL_SUCCESS';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => {\r\n    return {\r\n        type: SET_USER_DATA, payload: { userId, email, login, isAuth }\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => {\r\n    return {\r\n        type: GET_CAPTCHA_URL_SUCCESS, payload: { captchaUrl }\r\n    }\r\n}\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        let { id, email, login } = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", { _error: message }));\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url;\r\n\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__1Ds6u\",\"pageNumber\":\"Paginator_pageNumber__1l6Au\",\"selectedPage\":\"Paginator_selectedPage__LOKYZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2fx3k\",\"loginBlock\":\"Header_loginBlock__3RSQH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__3K7e6\",\"item\":\"Nav_item__35ftU\",\"activeLink\":\"Nav_activeLink__O1cG1\",\"friendBlock\":\"Nav_friendBlock__1g4l2\",\"friendItem\":\"Nav_friendItem__3nAXr\"};","import {profileAPI as ProfileAPI, profileAPI, userAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\nconst SET_PROFILE = 'SET_PROFILE';\r\n\r\nlet initialState = {\r\n    postsData: [\r\n        { id: 1, message: 'Hi, how are you?', LikesCount: 12 },\r\n        { id: 2, message: 'Hi meeeeen!!', LikesCount: 11 },\r\n        { id: 3, message: 'Yo', LikesCount: 11 },\r\n        { id: 4, message: 'Yo', LikesCount: 11 },\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                LikesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos}\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => {\r\n    return {\r\n        type: ADD_POST, newPostText\r\n    }\r\n}\r\n\r\nexport const setUserProfile = (profile) => {\r\n    return {\r\n        type: SET_USER_PROFILE, profile\r\n    }\r\n}\r\n\r\nexport const setStatus = (status) => {\r\n    return {\r\n        type: SET_STATUS, status\r\n    }\r\n}\r\n\r\nexport const savePhotoSuccess = (photos) => {\r\n    return {\r\n        type: SAVE_PHOTO_SUCCESS, photos\r\n    }\r\n}\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await ProfileAPI.getProfile(userId);\r\n\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId);\r\n\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    const response = await profileAPI.updateStatus(status);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    const response = await profileAPI.savePhoto(file);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\n\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    const response = await profileAPI.saveProfile(profile);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    } else {\r\n        //dispatch(stopSubmit(\"edit-profile\", {\"contacts\": {\"facebook\": response.data.messages[0]} }));\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0] }));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n}\r\n\r\nexport default profileReducer;","module.exports = __webpack_public_path__ + \"static/media/archi-15.1babb798.jpg\";","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogsData: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrey'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'Hi meeen eee!!'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ],\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            return  {\r\n                ...state,\r\n                messages: [ ...state.messages, {id: 5, message: action.newMessageText} ],\r\n                newMessageText: ''\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageText) => {\r\n    return {\r\n        type: SEND_MESSAGE, newMessageText\r\n    }\r\n}\r\n\r\nexport default dialogsReducer;","import * as axios from 'axios';\r\n\r\nconst instance = axios.create ({\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': 'a422b91f-124a-4b18-8f18-effef6e13fe2'\r\n    }\r\n});\r\n\r\nexport const userAPI = {\r\n    getUsers(currentPage = 1, pageSize = 5) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    // getProfile(userId) {\r\n    //     return profileAPI.getProfile(userId)\r\n    // }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, { status: status })\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile)\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        } )\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile)\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe, captcha });\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`);\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__3CDP5\"};","module.exports = __webpack_public_path__ + \"static/media/35.2cafed70.svg\";"],"sourceRoot":""}