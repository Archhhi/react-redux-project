{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","components/common/FormsControls/FormControls.js","components/utils/validators/validators.js","components/Login/LoginPage.jsx"],"names":["module","exports","FormControl","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","input","restProps","child","Input","createField","placeholder","name","validate","component","text","required","value","maxLengthCreator","maxLength","length","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","type","style","formSummaryError","connect","state","isAuth","auth","login","to","formData","email","password","rememberMe"],"mappings":"qHACAA,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,0C,8LCGrHC,EAAc,SAAC,GAA0C,IAAD,IAAvCC,KAAOC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,MAAQC,EAAe,EAAfA,SACrCC,EAAWH,GAAWC,EAC5B,OACI,yBAAKG,UAAWC,IAAOC,YAAc,KAAOH,EAAWE,IAAOJ,MAAQ,KAClE,6BACKC,GAEJC,GAAY,8BAAOF,KAKnBM,EAAW,SAACC,GAAW,IACxBC,EAAqCD,EAArCC,MAAuBC,GAAcF,EAA9BT,KAA8BS,EAAxBG,MADU,YACcH,EADd,2BAE/B,OAAO,kBAACV,EAAgBU,EAAO,8CAAcC,EAAWC,MAG/CE,EAAQ,SAACJ,GAAW,IACrBC,EAAqCD,EAArCC,MAAuBC,GAAcF,EAA9BT,KAA8BS,EAAxBG,MADO,YACiBH,EADjB,2BAE5B,OAAO,kBAACV,EAAgBU,EAAO,2CAAWC,EAAWC,MAG5CG,EAAc,SAACC,EAAaC,EAAMC,EAAUC,GAA9B,IAAyCT,EAAzC,uDAAiD,GAAIU,EAArD,uDAA4D,GAA5D,OACvB,6BACI,kBAAC,IAAD,eAAOJ,YAAaA,EAChBC,KAAMA,EACNC,SAAUA,EACVC,UAAWA,GACPT,IALZ,IAKuBU,K,iCChC3B,oEAAO,IAAMC,EAAW,SAAAC,GACpB,IAAIA,EACJ,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAIA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,iCCNlC,+FA0BME,EAAiBC,YAAU,CAAEC,KAAM,SAAlBD,EAjBL,SAAC,GAA6B,IAA3BE,EAA0B,EAA1BA,aAAc1B,EAAY,EAAZA,MAC/B,OACI,0BAAM2B,SAAUD,GACXd,YAAY,QAAS,QAAS,CAACM,KAAWP,IAAO,CAAEiB,KAAM,SACzDhB,YAAY,WAAY,WAAY,CAACM,KAAWP,IAAO,CAAEiB,KAAM,aAC/DhB,YAAY,KAAM,aAAc,GAAID,IAAO,CAAEiB,KAAM,YAAc,eAEjE5B,GAAS,yBAAKG,UAAW0B,IAAMC,kBAC3B9B,GAEL,6BACI,8CA6BD+B,uBAJS,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,UAGiB,CAAEE,WAA3BJ,EArBD,SAACxB,GAKX,OAAIA,EAAM0B,OACC,kBAAC,IAAD,CAAUG,GAAI,aAIrB,6BACI,qCACA,kBAACb,EAAD,CAAgBI,SAXP,SAACU,GACd9B,EAAM4B,MAAME,EAASC,MAAOD,EAASE,SAAUF,EAASG","file":"static/js/6.c2f07fb6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1Wqoj\",\"error\":\"FormsControls_error__1m5wo\",\"formSummaryError\":\"FormsControls_formSummaryError__PjrMp\"};","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\nimport { Field } from \"redux-form\";\r\n\r\nconst FormControl = ({ meta: {touched, error}, children }) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validate, component, props = {}, text = '') => (\r\n    <div>\r\n        <Field placeholder={placeholder}\r\n            name={name}\r\n            validate={validate}\r\n            component={component}\r\n            {...props} /> {text}\r\n    </div>\r\n)","export const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../redux/auth-reducer\";\r\nimport { Input, createField } from \"../common/FormsControls/FormControls\";\r\nimport { required } from \"../utils/validators/validators\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport style from \"./../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst LoginForm = ({ handleSubmit, error }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit} >\r\n            {createField('Email', 'email', [required], Input, { type: 'text' })}\r\n            {createField('Password', 'password', [required], Input, { type: 'password' })}\r\n            {createField(null, 'rememberMe', [], Input, { type: 'checkbox' }, 'remember me')}\r\n\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button>login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>LOGIN</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);"],"sourceRoot":""}