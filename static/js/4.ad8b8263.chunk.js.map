{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","components/common/FormsControls/FormControls.js","components/utils/validators/validators.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","FormControl","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","input","restProps","child","Input","createField","placeholder","name","validate","component","text","required","value","maxLengthCreator","maxLength","length","ProfileStatusWithHooks","useState","editMode","seteditMode","status","setStatus","useEffect","onClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","ProfileInfo","profile","s","descriptionBlock","src","photos","large","selectedPage","fullName","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainlink","lookingForAJob","Preloader","Post","item","alt","message","LikesCount","maxLength10","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","MyPosts","React","memo","postsElements","postsData","reverse","map","p","id","key","postsBlock","values","addPost","newPostText","posts","MyPostsContainer","connect","state","ProfilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/4.ad8b8263.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1Wqoj\",\"error\":\"FormsControls_error__1m5wo\",\"formSummaryError\":\"FormsControls_formSummaryError__PjrMp\"};","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\nimport { Field } from \"redux-form\";\r\n\r\nconst FormControl = ({ meta: {touched, error}, children }) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validate, component, props = {}, text = '') => (\r\n    <div>\r\n        <Field placeholder={placeholder}\r\n            name={name}\r\n            validate={validate}\r\n            component={component}\r\n            {...props} /> {text}\r\n    </div>\r\n)","export const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__gsMrF\",\"selectedPage\":\"ProfileInfo_selectedPage__2yOR4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1jsNk\",\"posts\":\"MyPosts_posts__2lMbE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__19lbI\"};","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, seteditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        seteditMode(true);\r\n    }\r\n\r\n    const deActivateEditMode = () => {\r\n        seteditMode(false)\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onClick={activateEditMode}>{status || \"-----\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input autoFocus={true} onBlur={deActivateEditMode} onChange={onStatusChange} value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large} />\r\n                <div className={s.selectedPage}>{profile.fullName}</div>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n                <div>{profile.contacts.facebook}</div>\r\n                <div>{profile.contacts.website}</div>\r\n                <div>{profile.contacts.vk}</div>\r\n                <div>{profile.contacts.twitter}</div>\r\n                <div>{profile.contacts.instagram}</div>\r\n                <div>{profile.contacts.youtube}</div>\r\n                <div>{profile.contacts.github}</div>\r\n                <div>{profile.contacts.mainlink}</div>\r\n                <div>\r\n                    {profile.lookingForAJob\r\n                        ? <div>Ищу Работу</div>\r\n                        : <div>Не ищу работу</div>}\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://assets.jpegmini.com/user/images/slider_puffin_jpegmini_mobile.jpg\" alt=\"\"/>\r\n            {props.message}\r\n            <div>\r\n                <span>like {props.LikesCount}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} >\r\n            <div>\r\n                <Field name={'newPostText'} placeholder={'Post message'} component={Textarea}\r\n                       validate={[required, maxLength10]} />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({ form: 'ProfileAddNewPostForm' })(AddNewPostForm)\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    let postsElements =\r\n        [...props.postsData]\r\n        .reverse()\r\n        .map(p => <Post\r\n            message={p.message}\r\n            id={p.id}\r\n            key={p.id}\r\n            LikesCount={p.LikesCount}/>);\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost} />\r\n\r\n            <div className={s.posts}>\r\n                { postsElements }\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        postsData: state.ProfilePage.postsData,\r\n        newPostText: state.ProfilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.ProfilePage.profile,\r\n    status: state.ProfilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n        withRouter\r\n)(ProfileContainer);"],"sourceRoot":""}