{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","components/common/FormsControls/FormControls.js","components/utils/validators/validators.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","FormControl","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","input","restProps","child","Input","createField","placeholder","name","validate","component","text","required","value","maxLengthCreator","maxLength","length","ProfileStatusWithHooks","useState","editMode","seteditMode","status","setStatus","useEffect","onClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","onSubmit","style","formSummaryError","type","aboutMe","Object","keys","contacts","map","key","s","contact","ProfileData","isOwner","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","setEditMode","Preloader","descriptionBlock","src","photos","large","userPhoto","mainPhoto","target","files","initialValues","formData","then","Post","item","alt","message","LikesCount","maxLength10","AddNewPostFormRedux","Field","MyPosts","React","memo","postsElements","postsData","reverse","p","id","postsBlock","values","addPost","newPostText","posts","MyPostsContainer","connect","state","ProfilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/4.cd6d638d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1Wqoj\",\"error\":\"FormsControls_error__1m5wo\",\"formSummaryError\":\"FormsControls_formSummaryError__PjrMp\"};","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\nimport { Field } from \"redux-form\";\r\n\r\nconst FormControl = ({ meta: {touched, error}, children }) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validate, component, props = {}, text = '') => (\r\n    <div>\r\n        <Field placeholder={placeholder}\r\n            name={name}\r\n            validate={validate}\r\n            component={component}\r\n            {...props} /> {text}\r\n    </div>\r\n)","export const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__gsMrF\",\"selectedPage\":\"ProfileInfo_selectedPage__2yOR4\",\"mainPhoto\":\"ProfileInfo_mainPhoto__3b9aK\",\"contact\":\"ProfileInfo_contact__a55Zj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1jsNk\",\"posts\":\"MyPosts_posts__2lMbE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__19lbI\"};","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, seteditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        seteditMode(true);\r\n    }\r\n\r\n    const deActivateEditMode = () => {\r\n        seteditMode(false)\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <b>Status</b>: <span onClick={activateEditMode}>{status || \"-----\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input autoFocus={true} onBlur={deActivateEditMode} onChange={onStatusChange} value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport style from \"../../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div><button onClick={() => {}}>Save</button></div>\r\n        {error && <div className={style.formSummaryError}>\r\n            {error}\r\n        </div>}\r\n        <div>\r\n            <b>Full name</b>:\r\n            {createField(\"Full name\", \"fullName\", [], Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>:\r\n            {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n        </div>\r\n        <div>\r\n            <b>My professional skills</b>:\r\n            {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea )}\r\n        </div>\r\n        <div>\r\n            <b>About Me</b>: {profile.aboutMe}\r\n            {createField(\"About Me\", \"aboutMe\", [], Textarea )}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className={s.contact}>\r\n                <b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b>\r\n            </div>\r\n        })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {useState} from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from '../../../assets/images/archi-15.jpg';\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode]  = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large || userPhoto} className={s.mainPhoto}/>\r\n                <div>{isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}</div>\r\n\r\n                { editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\r\n                    : <ProfileData goToEditMode={() => {setEditMode(true)} } profile={profile} isOwner={isOwner} />\r\n                }\r\n\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return (\r\n        <>\r\n            {isOwner && <div><button onClick={goToEditMode}>edit</button></div>}\r\n            <div>\r\n                <b>Full Name</b>: {profile.fullName}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n            </div>\r\n            {profile.lookingForAJob &&\r\n            <div>\r\n                <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n            </div>\r\n            }\r\n            <div>\r\n                <b>About me</b>: {profile.aboutMe}\r\n            </div>\r\n            <div>\r\n                <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n            })}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://assets.jpegmini.com/user/images/slider_puffin_jpegmini_mobile.jpg\" alt=\"\"/>\r\n            {props.message}\r\n            <div>\r\n                <span>like {props.LikesCount}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} >\r\n            <div>\r\n                <Field name={'newPostText'} placeholder={'Post message'} component={Textarea}\r\n                       validate={[required, maxLength10]} />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({ form: 'ProfileAddNewPostForm' })(AddNewPostForm)\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    let postsElements =\r\n        [...props.postsData]\r\n        .reverse()\r\n        .map(p => <Post\r\n            message={p.message}\r\n            id={p.id}\r\n            key={p.id}\r\n            LikesCount={p.LikesCount}/>);\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost} />\r\n\r\n            <div className={s.posts}>\r\n                { postsElements }\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        postsData: state.ProfilePage.postsData,\r\n        newPostText: state.ProfilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo isOwner={props.isOwner}\r\n                         profile={props.profile}\r\n                         status={props.status}\r\n                         saveProfile={props.saveProfile}\r\n                         updateStatus={props.updateStatus}\r\n                         savePhoto={props.savePhoto}\r\n            />\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.ProfilePage.profile,\r\n    status: state.ProfilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n        withRouter\r\n)(ProfileContainer);"],"sourceRoot":""}